<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cttic.sysframe.frame.dao.SmGroup2OperMapper">
	<resultMap id="BaseResultMap" type="cn.cttic.sysframe.frame.domain.SmGroup2Oper">
		<id column="GROUP_ID" property="groupId" jdbcType="DECIMAL" />
		<id column="OPER_ID" property="operId" jdbcType="VARCHAR" />
		<result column="STATE" property="state" jdbcType="CHAR" />
		<result column="LEADER_STATE" property="leaderState" jdbcType="CHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		GROUP_ID, OPER_ID, STATE, LEADER_STATE
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="cn.cttic.sysframe.frame.domain.SmGroup2OperExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from SM_GROUP_2_OPER
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="cn.cttic.sysframe.frame.domain.SmGroup2OperKey">
		select
		<include refid="Base_Column_List" />
		from SM_GROUP_2_OPER
		where GROUP_ID = #{groupId,jdbcType=DECIMAL}
		and OPER_ID = #{operId,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2OperKey">
		delete from SM_GROUP_2_OPER
		where GROUP_ID = #{groupId,jdbcType=DECIMAL}
		and OPER_ID = #{operId,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByExample" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2OperExample">
		delete from SM_GROUP_2_OPER
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2Oper">
		insert into SM_GROUP_2_OPER (GROUP_ID, OPER_ID, STATE,
		LEADER_STATE)
		values (#{groupId,jdbcType=DECIMAL}, #{operId,jdbcType=DECIMAL},
		#{state,jdbcType=CHAR},
		#{leaderState,jdbcType=CHAR})
	</insert>
	<insert id="insertSelective" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2Oper">
		insert into SM_GROUP_2_OPER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="groupId != null">
				GROUP_ID,
			</if>
			<if test="operId != null">
				OPER_ID,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="leaderState != null">
				LEADER_STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="groupId != null">
				#{groupId,jdbcType=DECIMAL},
			</if>
			<if test="operId != null">
				#{operId,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				#{state,jdbcType=CHAR},
			</if>
			<if test="leaderState != null">
				#{leaderState,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2OperExample"
		resultType="java.lang.Integer">
		select count(*) from SM_GROUP_2_OPER
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update SM_GROUP_2_OPER
		<set>
			<if test="record.groupId != null">
				GROUP_ID = #{record.groupId,jdbcType=DECIMAL},
			</if>
			<if test="record.operId != null">
				OPER_ID = #{record.operId,jdbcType=DECIMAL},
			</if>
			<if test="record.state != null">
				STATE = #{record.state,jdbcType=CHAR},
			</if>
			<if test="record.leaderState != null">
				LEADER_STATE = #{record.leaderState,jdbcType=CHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update SM_GROUP_2_OPER
		set GROUP_ID = #{record.groupId,jdbcType=DECIMAL},
		OPER_ID = #{record.operId,jdbcType=DECIMAL},
		STATE = #{record.state,jdbcType=CHAR},
		LEADER_STATE = #{record.leaderState,jdbcType=CHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2Oper">
		update SM_GROUP_2_OPER
		<set>
			<if test="state != null">
				STATE = #{state,jdbcType=CHAR},
			</if>
			<if test="leaderState != null">
				LEADER_STATE = #{leaderState,jdbcType=CHAR},
			</if>
		</set>
		where GROUP_ID = #{groupId,jdbcType=DECIMAL}
		and OPER_ID = #{operId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.cttic.sysframe.frame.domain.SmGroup2Oper">
		update SM_GROUP_2_OPER
		set STATE = #{state,jdbcType=CHAR},
		LEADER_STATE = #{leaderState,jdbcType=CHAR}
		where GROUP_ID = #{groupId,jdbcType=DECIMAL}
		and OPER_ID = #{operId,jdbcType=DECIMAL}
	</update>
</mapper>