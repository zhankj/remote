<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cttic.sysframe.frame.dao.SmFtpMapper">
	<resultMap id="BaseResultMap" type="cn.cttic.sysframe.frame.domain.SmFtp">
		<id column="FTP_CODE" property="ftpCode" jdbcType="VARCHAR" />
		<result column="HOST_IP" property="hostIp" jdbcType="VARCHAR" />
		<result column="PORT" property="port" jdbcType="DECIMAL" />
		<result column="USERNAME" property="username" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="NOTE" property="note" jdbcType="VARCHAR" />
		<result column="STATE" property="state" jdbcType="VARCHAR" />
		<result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		FTP_CODE, HOST_IP, PORT, USERNAME, PASSWORD, NOTE, STATE, CREATE_DATE
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="cn.cttic.sysframe.frame.domain.SmFtpExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from SM_FTP
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from SM_FTP
		where FTP_CODE = #{ftpCode,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from SM_FTP
		where FTP_CODE = #{ftpCode,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="cn.cttic.sysframe.frame.domain.SmFtpExample">
		delete from SM_FTP
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.cttic.sysframe.frame.domain.SmFtp">
		insert into SM_FTP (FTP_CODE, HOST_IP, PORT,
		USERNAME, PASSWORD, NOTE,
		STATE, CREATE_DATE)
		values (#{ftpCode,jdbcType=VARCHAR}, #{hostIp,jdbcType=VARCHAR},
		#{port,jdbcType=DECIMAL},
		#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="cn.cttic.sysframe.frame.domain.SmFtp">
		insert into SM_FTP
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ftpCode != null">
				FTP_CODE,
			</if>
			<if test="hostIp != null">
				HOST_IP,
			</if>
			<if test="port != null">
				PORT,
			</if>
			<if test="username != null">
				USERNAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="note != null">
				NOTE,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="createDate != null">
				CREATE_DATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ftpCode != null">
				#{ftpCode,jdbcType=VARCHAR},
			</if>
			<if test="hostIp != null">
				#{hostIp,jdbcType=VARCHAR},
			</if>
			<if test="port != null">
				#{port,jdbcType=DECIMAL},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.cttic.sysframe.frame.domain.SmFtpExample"
		resultType="java.lang.Integer">
		select count(*) from SM_FTP
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update SM_FTP
		<set>
			<if test="record.ftpCode != null">
				FTP_CODE = #{record.ftpCode,jdbcType=VARCHAR},
			</if>
			<if test="record.hostIp != null">
				HOST_IP = #{record.hostIp,jdbcType=VARCHAR},
			</if>
			<if test="record.port != null">
				PORT = #{record.port,jdbcType=DECIMAL},
			</if>
			<if test="record.username != null">
				USERNAME = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				PASSWORD = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.note != null">
				NOTE = #{record.note,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				STATE = #{record.state,jdbcType=VARCHAR},
			</if>
			<if test="record.createDate != null">
				CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update SM_FTP
		set FTP_CODE = #{record.ftpCode,jdbcType=VARCHAR},
		HOST_IP = #{record.hostIp,jdbcType=VARCHAR},
		PORT = #{record.port,jdbcType=DECIMAL},
		USERNAME = #{record.username,jdbcType=VARCHAR},
		PASSWORD = #{record.password,jdbcType=VARCHAR},
		NOTE = #{record.note,jdbcType=VARCHAR},
		STATE = #{record.state,jdbcType=VARCHAR},
		CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.cttic.sysframe.frame.domain.SmFtp">
		update SM_FTP
		<set>
			<if test="hostIp != null">
				HOST_IP = #{hostIp,jdbcType=VARCHAR},
			</if>
			<if test="port != null">
				PORT = #{port,jdbcType=DECIMAL},
			</if>
			<if test="username != null">
				USERNAME = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				NOTE = #{note,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where FTP_CODE = #{ftpCode,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.cttic.sysframe.frame.domain.SmFtp">
		update SM_FTP
		set HOST_IP = #{hostIp,jdbcType=VARCHAR},
		PORT = #{port,jdbcType=DECIMAL},
		USERNAME = #{username,jdbcType=VARCHAR},
		PASSWORD = #{password,jdbcType=VARCHAR},
		NOTE = #{note,jdbcType=VARCHAR},
		STATE = #{state,jdbcType=VARCHAR},
		CREATE_DATE = #{createDate,jdbcType=TIMESTAMP}
		where FTP_CODE = #{ftpCode,jdbcType=VARCHAR}
	</update>
</mapper>